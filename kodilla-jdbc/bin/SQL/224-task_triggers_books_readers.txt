CREATE TABLE BOOKS_AUD(
event_id int(11) NOT NULL auto_increment,
event_date datetime not null,
event_type varchar(10) default null,

  BOOK_ID int(11) NOT NULL,
  OLD_TITLE varchar(255),
  NEW_TITLE varchar(255),
  OLD_PUBYEAR int(4),
  NEW_PUBYEAR int(4),
  OLD_BESTSELLER tinyint(1),
  NEW_BESTSELLER tinyint(1),
  PRIMARY KEY (event_id ));

CREATE TABLE READERS_AUD(
event_id int(11) NOT NULL auto_increment,
event_date datetime not null,
event_type varchar(10) default null,

  READER_ID int(11) NOT NULL,
  OLD_FIRSTNAME varchar(255),
  NEW_FIRSTNAME varchar(255),
  OLD_LASTNAME varchar(255),
  NEW_LASTNAME varchar(255),
  OLD_PESELID varchar(11),
  NEW_PESELID varchar(11),
  OLD_VIP_LEVEL varchar(20),
  NEW_VIP_LEVEL varchar(20),
  PRIMARY KEY (event_id ));

#-----------BOOKS INSERT 
delimiter $$

create trigger BOOKS_INSERT after insert on BOOKS
for each row
begin
insert into BOOKS_aud (event_date, event_type, BOOK_id, NEW_TITLE , NEW_PUBYEAR, NEW_BESTSELLER)
       		values(curtime(), "insert", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER ) ;
end $$
delimiter ;      
        
#-----------BOOKS DELETE 

delimiter $$

create trigger BOOKS_DELETE after delete on BOOKS
for each row
begin
insert into BOOKS_aud (event_date, event_type, BOOK_id, OLD_TITLE , OLD_PUBYEAR, OLD_BESTSELLER)
       		values(curtime(), "delete", OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER ) ;
end $$
delimiter ;          

#--------------BOOKS UPDATE 
delimiter $$

create trigger BOOKS_UPDATE after update on BOOKS 
for each row
begin
insert into BOOKS_aud (event_date, event_type, BOOK_id, NEW_TITLE, NEW_PUBYEAR, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
			values(curtime(), "update", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
end $$
delimiter ;      
         
#============READERS INSERT 
delimiter $$

create trigger READERS_INSERT after insert on READERS
for each row
begin
insert into READERS_aud (event_date, event_type, READER_id, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
	            values(curtime(), "insert", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
end $$
delimiter ;     
         
#----------- READERS DELETE 

delimiter $$

create trigger READERS_DELETE after delete on READERS
for each row
begin
insert into READERS_aud (event_date, event_type, READER_id, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
	             values(curtime(), "delete", OLD.READER_ID, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
end $$
delimiter ;          
#-----------READERS UPDATE 
delimiter $$

create trigger READERS_UPDATE after update on READERS 
for each row
begin
insert into READERS_aud (event_date, event_type, READER_id, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
		       values(curtime(), "update", NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL, OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
end $$
delimiter ;               
     